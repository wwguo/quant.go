package quant

import "testing"

var vf = []float64 {
    4.9790119248836735e+00,
    7.7388724745781045e+00,
    -2.7688005719200159e-01,
    -5.0106036182710749e+00,
    9.6362937071984173e+00,
    2.9263772392439646e+00,
    5.2290834314593066e+00,
    2.7279399104360102e+00,
    1.8253080916808550e+00,
    -8.6859247685756013e+00,
}

var fquote = [][]float64 { 
	[]float64 { 2.7598605496944310e+00, -2.7598605496944310e+00 },
	[]float64 { -8.0157525317701060e+00, 8.0157525317701060e+00 },
	[]float64 { -4.7337235610790730e+00, 4.7337235610790730e+00 },
	[]float64 { 14.6468973254694920e+00, -14.6468973254694920e+00 },
	[]float64 { -6.7099164679544530e+00, 6.7099164679544530e+00 },
	[]float64 { 2.3027061922153420e+00, -2.3027061922153420e+00 },
	[]float64 { -2.5011435210232964e+00, 2.5011435210232964e+00 },
	[]float64 { -0.9026318187551552e+00, 0.9026318187551552e+00 },
	[]float64 { -10.511232860256456e+00, 10.511232860256456e+00 },
}

func TestForward(t *testing.T) {
    for i := 0; i < len(vf)-1; i++ {
		if long, short := Forward(vf[i], vf[i+1]); long != fquote[i][0] || short != fquote[i][1] {
			t.Errorf("Long payoff = %g, expect = %g\n; Short payoff = %g, expect %g.\n", long, fquote[i][0], short, fquote[i][1] )
		}
	}
}

